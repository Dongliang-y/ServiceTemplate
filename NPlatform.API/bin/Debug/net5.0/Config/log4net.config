<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler,log4net"/>
  </configSections>

  <log4net>
    <!-- Debug 将日志以回滚文件的形式写到文件中 -->
    <appender name="RollingFileDebug" type="log4net.Appender.RollingFileAppender" >
      <!-- 日志文件存放位置，可以为绝对路径也可以为相对路径 -->
      <file value="logs\\" />
      <!-- 日志文件的命名规则 -->
      <datePattern value="yyyy-MM-dd/'Debug.log'"/>
      <!-- 将日志信息追加到已有的日志文件中-->
      <appendToFile value="true" />
      <rollingStyle value="Size" />
      <maxSizeRollBackups value="100" />
      <maximumFileSize value="1MB" />
      <!-- 指定按日期切分日志文件 -->
      <rollingStyle value="Date"/>
      <!-- 当将日期作为日志文件的名字时，必须将staticLogFileName的值设置为false -->
      <staticLogFileName value="false" />
      <!-- 最小锁定模式，以允许多个进程可以写入同一个文件 -->
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
      <layout type="NPlatform.Infrastructure.BusinessLayout,NPlatform.Infrastructure">
        <header value="--------------------------------------------------------------------------------------------" />
        <conversionPattern value="%newline &quot;time&quot;=&quot;%date&quot;,&quot;threadID&quot;=&quot;[%thread]&quot;, &quot;level&quot;=&quot;%-5level&quot;, &quot;dll&quot;=&quot;%logger&quot;,  %newline Module：%Module  %newline BusinessID：%BusinessID  %newline 描述=%message %newline" />
      </layout>
	    
      <filter type="log4net.Filter.LevelRangeFilter">
        <param name="LevelMin" value="Debug" />
        <param name="LevelMax" value="Debug" />
      </filter>
    </appender>

    <!-- Info 将日志以回滚文件的形式写到文件中 -->
    <appender name="RollingFileInfo" type="log4net.Appender.RollingFileAppender" >
      <!-- 日志文件存放位置，可以为绝对路径也可以为相对路径 -->
      <file value="logs\\" />
      <!-- 日志文件的命名规则 -->
      <datePattern value="yyyy-MM-dd/'Info.log'"/>
      <!-- 将日志信息追加到已有的日志文件中-->
      <appendToFile value="true" />
      <rollingStyle value="Size" />
      <maxSizeRollBackups value="100" />
      <maximumFileSize value="1MB" />
      <!-- 指定按日期切分日志文件 -->
      <rollingStyle value="Date"/>
      <!-- 当将日期作为日志文件的名字时，必须将staticLogFileName的值设置为false -->
      <staticLogFileName value="false" />
      <!-- 最小锁定模式，以允许多个进程可以写入同一个文件 -->
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
      <layout type="NPlatform.Infrastructure.BusinessLayout,NPlatform.Infrastructure">
        <header value="--------------------------------------------------------------------------------------------" />
		  <conversionPattern value="%newline &quot;time&quot;=&quot;%date&quot;,&quot;threadID&quot;=&quot;[%thread]&quot;, &quot;level&quot;=&quot;%-5level&quot;, &quot;dll&quot;=&quot;%logger&quot;,  %newline Module：%Module  %newline BusinessID：%BusinessID  %newline 描述=%message %newline" />
	  </layout>
      <filter type="log4net.Filter.LevelRangeFilter">
        <param name="LevelMin" value="Info" />
        <param name="LevelMax" value="Info" />
      </filter>
    </appender>

    <!-- WARN 将日志以回滚文件的形式写到文件中 -->
    <appender name="RollingFileWarn" type="log4net.Appender.RollingFileAppender" >
      <!-- 日志文件存放位置，可以为绝对路径也可以为相对路径 -->
      <file value="logs\\" />
      <!-- 日志文件的命名规则 -->
      <datePattern value="yyyy-MM-dd/'Warn.log'"/>
      <!-- 将日志信息追加到已有的日志文件中-->
      <appendToFile value="true" />
      <rollingStyle value="Size" />
      <maxSizeRollBackups value="100" />
      <maximumFileSize value="1MB" />
      <!-- 指定按日期切分日志文件 -->
      <rollingStyle value="Date"/>
      <!-- 当将日期作为日志文件的名字时，必须将staticLogFileName的值设置为false -->
      <staticLogFileName value="false" />
      <!-- 最小锁定模式，以允许多个进程可以写入同一个文件 -->
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
      <layout type="NPlatform.Infrastructure.BusinessLayout,NPlatform.Infrastructure">
        <header value="--------------------------------------------------------------------------------------------" />
		    <conversionPattern value="%newline &quot;time&quot;=&quot;%date&quot;,&quot;threadID&quot;=&quot;[%thread]&quot;, &quot;level&quot;=&quot;%-5level&quot;, &quot;dll&quot;=&quot;%logger&quot;,  %newline Module：%Module  %newline BusinessID：%BusinessID  %newline 描述=%message %newline" />

	  </layout>
      <filter type="log4net.Filter.LevelRangeFilter">
        <param name="LevelMin" value="Warn" />
        <param name="LevelMax" value="Warn" />
      </filter>
    </appender>

    <!-- Error 将日志以回滚文件的形式写到文件中 -->
    <appender name="RollingFileError" type="log4net.Appender.RollingFileAppender" >
      <!-- 日志文件存放位置，可以为绝对路径也可以为相对路径 -->
      <file value="logs\\" />
      <!-- 日志文件的命名规则 -->
      <datePattern value="yyyy-MM-dd/'Error.log'"/>
      <!-- 将日志信息追加到已有的日志文件中-->
      <appendToFile value="true" />
      <rollingStyle value="Size" />
      <maxSizeRollBackups value="100" />
      <maximumFileSize value="1MB" />
      <!-- 指定按日期切分日志文件 -->
      <rollingStyle value="Date"/>
      <!-- 当将日期作为日志文件的名字时，必须将staticLogFileName的值设置为false -->
      <staticLogFileName value="false" />
      <!-- 最小锁定模式，以允许多个进程可以写入同一个文件 -->
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
      <layout type="NPlatform.Infrastructure.BusinessLayout,NPlatform.Infrastructure">
        <header value="--------------------------------------------------------------------------------------------" />
		    <conversionPattern value="%newline &quot;time&quot;=&quot;%date&quot;,&quot;threadID&quot;=&quot;[%thread]&quot;, &quot;level&quot;=&quot;%-5level&quot;, &quot;dll&quot;=&quot;%logger&quot;,  %newline Module：%Module  %newline BusinessID：%BusinessID  %newline 描述=%message %newline" />
	  </layout>
      <filter type="log4net.Filter.LevelRangeFilter">
        <param name="LevelMin" value="Error" />
        <param name="LevelMax" value="Error" />
      </filter>
    </appender>

    <!-- Fatal 将日志以回滚文件的形式写到文件中 -->
    <appender name="RollingFileFatal" type="log4net.Appender.RollingFileAppender" >
      <!-- 日志文件存放位置，可以为绝对路径也可以为相对路径 -->
      <file value="logs\\" />
      <!-- 日志文件的命名规则 -->
      <datePattern value="yyyy-MM-dd/'Fatal.log'"/>
      <!-- 将日志信息追加到已有的日志文件中-->
      <appendToFile value="true" />
      <rollingStyle value="Size" />
      <maxSizeRollBackups value="100" />
      <maximumFileSize value="1MB" />
      <!-- 指定按日期切分日志文件 -->
      <rollingStyle value="Date"/>
      <!-- 当将日期作为日志文件的名字时，必须将staticLogFileName的值设置为false -->
      <staticLogFileName value="false" />
      <!-- 最小锁定模式，以允许多个进程可以写入同一个文件 -->
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
		<layout type="NPlatform.Infrastructure.BusinessLayout,NPlatform.Infrastructure">
      <header value="--------------------------------------------------------------------------------------------" />
			<conversionPattern value="%newline &quot;time&quot;=&quot;%date&quot;,&quot;threadID&quot;=&quot;[%thread]&quot;, &quot;level&quot;=&quot;%-5level&quot;, &quot;dll&quot;=&quot;%logger&quot;,  %newline Module：%Module  %newline BusinessID：%BusinessID  %newline 描述=%message %newline" />
		</layout>
      <filter type="log4net.Filter.LevelRangeFilter">
        <param name="LevelMin" value="Fatal" />
        <param name="LevelMax" value="Fatal" />
      </filter>
    </appender>
    <!--定义日志的输出媒介，下面定义日志以四种方式输出。也可以下面的按照一种类型或其他类型输出。-->
    <!--定义输出到数据库中，这里举例输出到Access数据库中，数据库为log4net.mdb（可以自定义路径）-->
    <!--<appender name="AdoNetAppender_Access" type="log4net.Appender.AdoNetAppender">
      <connectionString value="Provider=Microsoft.Jet.OLEDB.4.0;Data Source=logDB/log4net.mdb" />-->
    <appender name="AdoNetAppender_MySql" type="MicroKnights.Logging.AdoNetAppender, MicroKnights.Log4NetAdoNetAppender">
      <bufferSize value="1" />
      <param name="ConnectionType" value="MySql.Data.MySqlClient.MySqlConnection,MySql.Data"/>
      <param name="ConnectionString" value="server=localhost;Allow User Variables=True;port=3306;uid =root;password=123456;persistsecurityinfo=True;database=NPlatform"/>
      <commandText value="INSERT INTO Sys_Loger (`Id`,`LogDate`,`LogThread`,`LogLevel`,`LogLogger`,`LogMessage`,`BusinessID`,`ModuleName`,`LogType`,`LogBrowser`,`LogLocation`,`LogException`) VALUES (uuid(),@logDate, @thread, @logLevel, @logger,@message,@businessID,@module,@logType,@logBrowser,@logLocation,@exception)" />
      <!--定义各个参数-->
      <parameter>
        <parameterName value="@logDate" />
        <dbType value="String" />
        <size value="240" />
        <layout type="NPlatform.Infrastructure.BusinessLayout,NPlatform.Infrastructure">
          <conversionPattern value="%date{yyyy-MM-dd HH:mm:ss}" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@thread" />
        <dbType value="String" />
        <size value="240" />
        <layout type="NPlatform.Infrastructure.BusinessLayout,NPlatform.Infrastructure">
          <conversionPattern value="%thread" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@logLevel" />
        <dbType value="String" />
        <size value="240" />
        <layout type="NPlatform.Infrastructure.BusinessLayout,NPlatform.Infrastructure">
          <conversionPattern value="%level" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@logger" />
        <dbType value="String" />
        <size value="240" />
        <layout type="NPlatform.Infrastructure.BusinessLayout,NPlatform.Infrastructure">
          <conversionPattern value="%creator" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@message" />
        <dbType value="String" />
        <size value="4000" />
        <layout type="NPlatform.Infrastructure.BusinessLayout,NPlatform.Infrastructure">
          <conversionPattern value="%message" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@businessID" />
        <dbType value="String" />
        <size value="255" />
        <layout type="NPlatform.Infrastructure.BusinessLayout,NPlatform.Infrastructure">
          <conversionPattern value="%businessID" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@module" />
        <dbType value="String" />
        <size value="255" />
        <layout type="NPlatform.Infrastructure.BusinessLayout,NPlatform.Infrastructure">
          <conversionPattern value="%module" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@logType" />
        <dbType value="String" />
        <size value="255" />
        <layout type="NPlatform.Infrastructure.BusinessLayout,NPlatform.Infrastructure">
          <conversionPattern value="%logType" />
        </layout>
      </parameter>
		<parameter>
			<parameterName value="@logBrowser" />
			<dbType value="String" />
			<size value="255" />
			<layout type="NPlatform.Infrastructure.BusinessLayout,NPlatform.Infrastructure">
				<conversionPattern value="%logBrowser" />
			</layout>
		</parameter>
		<parameter>
			<parameterName value="@logLocation" />
			<dbType value="String" />
			<size value="255" />
			<layout type="NPlatform.Infrastructure.BusinessLayout,NPlatform.Infrastructure">
				<conversionPattern value="%logLocation" />
			</layout>
		</parameter>
		<parameter>
			<parameterName value="@exception" />
			<dbType value="String" />
			<size value="4000" />
			<layout type="log4net.Layout.ExceptionLayout" />
		</parameter>
	</appender>
    <root>
      <!--控制级别，由低到高: ALL|DEBUG|INFO|WARN|ERROR|FATAL|OFF
      比如定义级别为INFO，则INFO级别向下的级别，比如DEBUG日志将不会被记录
      如果没有定义LEVEL的值，则缺省为DEBUG-->
      <level value="ALL"/>
      <appender-ref ref="RollingFileDebug" />
      <appender-ref ref="RollingFileInfo" />
      <appender-ref ref="RollingFileWarn" />
      <appender-ref ref="RollingFileError" />
      <appender-ref ref="RollingFileFatal" />
      
      <!--控制台以不同颜色显示日志-->
      <!--<appender-ref ref="ManagedColoredConsoleAppender" />-->
      <!--定义输出到数据库中。 如果不启用相应的日志记录，可以通过这种方式注释掉-->
     <!-- <appender-ref ref="AdoNetAppender_MySql" />-->
    </root>
  </log4net>
</configuration>